// nextflow.config
// ----------------------------------------------------------------------------
// Profiles
// ----------------------------------------------------------------------------
profiles {
    test {
        process {
            cpus = 1
            memory = '8 GB'
            time = '10m'
        }
    }

    cluster {
        process {
            cpus = 8
            memory = '8 GB'
            time = '12h'
        }
    }

    blast_test {
        process {
            cpus = 32
            memory = '100 GB'
            time = '16h'
        }
    }

    worm {
        process {
            withName: 'PREPROCESS' {
                cpus = 2
                memory = '4 GB'
                time = '4h'
            }   
            withName: 'RUN_BLAST_PAIR' {
                cpus = 64
                time = '24h'
            }
            withName: 'LOAD_SAMS' {
                cpus = 4
                memory = '16 GB'
            }      
            withName: 'BUILD_SAMAP' {
                cpus = 32
                time = '12h'
            }   
            withName: 'RUN_SAMAP' {
                cpus = 32
                time = '12h'
            }   
            withName: 'VISUALIZE_SAMAP' {
                cpus = 16
                time = '8h'
            }   
        }
    }

}
// ----------------------------------------------------------------------------
// Process Defaults
// ----------------------------------------------------------------------------
process {
    withName: 'PREPROCESS' {
        publishDir = [
            path: { "${params.outdir}/preprocess" },
            mode: params.publish_dir_mode ?: 'copy',
            saveAs: { filename -> filename == 'versions.yml' ? null : filename }
        ]
        container = params.container_blast
    }   
    withName: 'RUN_BLAST_PAIR' {
        publishDir = [
            path: { "${params.outdir}/blast" },
            mode: params.publish_dir_mode ?: 'copy',
            saveAs: { filename -> filename == 'versions.yml' ? null : filename }
        ]
        container = params.container_blast
    }
    withName: 'LOAD_SAMS' {
        publishDir = [
            path: { "${params.outdir}/load_sams" },
            mode: params.publish_dir_mode ?: 'copy',
            saveAs: { filename -> filename == 'versions.yml' ? null : filename }
        ]
        container = params.container_samap
    }      
    withName: 'BUILD_SAMAP' {
        publishDir = [
            path: { "${params.outdir}/build_samap" },
            mode: params.publish_dir_mode ?: 'copy',
            saveAs: { filename -> filename == 'versions.yml' ? null : filename }
        ]
        container = params.container_samap
    }   
    withName: 'RUN_SAMAP' {
        publishDir = [
            path: { "${params.outdir}/run_samap" },
            mode: params.publish_dir_mode ?: 'copy',
            saveAs: { filename -> filename == 'versions.yml' ? null : filename }
        ]
        container = params.container_samap
    }   
    withName: 'VISUALIZE_SAMAP' {
        publishDir = [
            path: { "${params.outdir}/vis" },
            mode: params.publish_dir_mode ?: 'copy',
            saveAs: { filename -> filename == 'versions.yml' ? null : filename }
        ]
        container = params.container_samap
    }   
}


// ----------------------------------------------------------------------------
// Parameters
// ----------------------------------------------------------------------------
params {
    // ----- Control Flow -----
    run_id              = null
    publish_dir_mode    = 'copy'

    // ----- Input -----
    sample_sheet        = 'sample_sheet.csv'
    data_dir            = 'data'
    maps_dir            = null

    // ----- Output -----
    outdir              = 'out'
    results_dir         = 'results' // remove this after refactor

    // ----- Containers ------
    container_blast     = 'pipeline/samap-blast:latest'
    container_samap     = 'pipeline/samap:latest'
}



// ----------------------------------------------------------------------------
// Docker Settings
// ----------------------------------------------------------------------------
docker {
    enabled = true
}

